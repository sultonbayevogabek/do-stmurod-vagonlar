{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport class MembersService {\n  constructor() {\n    this._httpClient = inject(HttpClient);\n  }\n  getPerformers() {\n    return this._httpClient.post(environment.host + 'objective/performer-list', {});\n  }\n  getMembersList(params) {\n    return this._httpClient.post(environment.host + 'member/list', params);\n  }\n  getDepartmentsList() {\n    return this._httpClient.post(environment.host + 'departments/list', {\n      limit: 300\n    });\n  }\n  static #_ = this.ɵfac = function MembersService_Factory(t) {\n    return new (t || MembersService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MembersService,\n    factory: MembersService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","HttpClient","environment","MembersService","constructor","_httpClient","getPerformers","post","host","getMembersList","params","getDepartmentsList","limit","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/sultonbayevogabek/Projects/do-stmurod-vagonlar/src/app/core/services/members.service.ts"],"sourcesContent":["import { inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, tap } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { MemberModel, PerformerModel } from '../models/member.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MembersService {\n  private _httpClient = inject(HttpClient);\n\n  getPerformers(): Observable<{ success: boolean; data: PerformerModel[] }> {\n    return this._httpClient.post<{ success: boolean; data: PerformerModel[] }>(environment.host + 'objective/performer-list', {})\n  }\n\n  getMembersList(params: { page: number; limit: number }): Observable<{ success: boolean; data: MemberModel[]; total: number }> {\n    return this._httpClient.post<{ success: boolean; data: MemberModel[]; total: number }>(environment.host + 'member/list', params)\n  }\n\n  getDepartmentsList(): Observable<any> {\n    return this._httpClient.post<any>(environment.host + 'departments/list', {\n      limit: 300\n    })\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAoB,eAAe;AAElD,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,WAAW,QAAQ,mCAAmC;;AAO/D,OAAM,MAAOC,cAAc;EAJ3BC,YAAA;IAKU,KAAAC,WAAW,GAAGL,MAAM,CAACC,UAAU,CAAC;;EAExCK,aAAaA,CAAA;IACX,OAAO,IAAI,CAACD,WAAW,CAACE,IAAI,CAA+CL,WAAW,CAACM,IAAI,GAAG,0BAA0B,EAAE,EAAE,CAAC;EAC/H;EAEAC,cAAcA,CAACC,MAAuC;IACpD,OAAO,IAAI,CAACL,WAAW,CAACE,IAAI,CAA2DL,WAAW,CAACM,IAAI,GAAG,aAAa,EAAEE,MAAM,CAAC;EAClI;EAEAC,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACN,WAAW,CAACE,IAAI,CAAML,WAAW,CAACM,IAAI,GAAG,kBAAkB,EAAE;MACvEI,KAAK,EAAE;KACR,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAfUV,cAAc;EAAA;EAAA,QAAAW,EAAA,G;WAAdX,cAAc;IAAAY,OAAA,EAAdZ,cAAc,CAAAa,IAAA;IAAAC,UAAA,EAHb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}