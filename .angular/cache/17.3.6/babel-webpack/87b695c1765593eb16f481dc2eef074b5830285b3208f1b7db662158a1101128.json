{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { MatIcon } from '@angular/material/icon';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { forkJoin } from 'rxjs';\nimport { environment } from '../environments/environment';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this._availableLanguages = ['uz', 'ru', 'uz_latn', 'en', 'kaa'];\n    this._translateService = inject(TranslateService);\n    this.languageOptions = [];\n  }\n  ngOnInit() {\n    this._translateService.addLangs(this._availableLanguages);\n    this._buildLanguageOptions();\n    const lang = localStorage.getItem('lang');\n    this._translateService.setDefaultLang(this._availableLanguages.includes(lang) ? lang : 'uz_latn');\n    console.log(environment.host);\n  }\n  _buildLanguageOptions() {\n    forkJoin(this._availableLanguages.map(lang => {\n      return this._translateService.get(lang.toUpperCase());\n    })).subscribe(_response => {\n      this._availableLanguages.forEach((lang, index) => {\n        this.languageOptions.push({\n          value: lang,\n          label: _response[index]\n        });\n      });\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, MatIcon, TranslateModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","inject","RouterOutlet","MatIcon","TranslateModule","TranslateService","forkJoin","environment","AppComponent","constructor","_availableLanguages","_translateService","languageOptions","ngOnInit","addLangs","_buildLanguageOptions","lang","localStorage","getItem","setDefaultLang","includes","console","log","host","map","get","toUpperCase","subscribe","_response","forEach","index","push","value","label","__decorate","selector","standalone","imports","templateUrl","styleUrl"],"sources":["/Users/sultonbayevogabek/Projects/do-stmurod-vagonlar/src/app/app.component.ts"],"sourcesContent":["import { Component, inject, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { MatIcon } from '@angular/material/icon';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { forkJoin } from 'rxjs';\nimport { environment } from '../environments/environment';\n\nexport interface ILanguageOption {\n  value: string;\n  label: string;\n}\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [ RouterOutlet, MatIcon, TranslateModule ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\n\nexport class AppComponent implements OnInit {\n  private _availableLanguages = [ 'uz', 'ru', 'uz_latn', 'en', 'kaa' ];\n  private _translateService = inject(TranslateService);\n  languageOptions: ILanguageOption[] = [];\n\n  ngOnInit(): void {\n    this._translateService.addLangs(this._availableLanguages);\n    this._buildLanguageOptions();\n\n    const lang = localStorage.getItem('lang');\n    this._translateService.setDefaultLang(this._availableLanguages.includes(lang) ? lang : 'uz_latn');\n    console.log(environment.host);\n  }\n\n  private _buildLanguageOptions() {\n    forkJoin(this._availableLanguages.map(lang => {\n      return this._translateService.get(lang.toUpperCase())\n    })).subscribe(\n      _response => {\n        this._availableLanguages.forEach((lang, index) => {\n          this.languageOptions.push({\n            value: lang,\n            label: _response[index]\n          });\n        })\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAgB,eAAe;AACzD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,eAAe,EAAEC,gBAAgB,QAAQ,qBAAqB;AACvE,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,WAAW,QAAQ,6BAA6B;AAelD,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAAlBC,YAAA;IACG,KAAAC,mBAAmB,GAAG,CAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,CAAE;IAC5D,KAAAC,iBAAiB,GAAGV,MAAM,CAACI,gBAAgB,CAAC;IACpD,KAAAO,eAAe,GAAsB,EAAE;EAyBzC;EAvBEC,QAAQA,CAAA;IACN,IAAI,CAACF,iBAAiB,CAACG,QAAQ,CAAC,IAAI,CAACJ,mBAAmB,CAAC;IACzD,IAAI,CAACK,qBAAqB,EAAE;IAE5B,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAI,CAACP,iBAAiB,CAACQ,cAAc,CAAC,IAAI,CAACT,mBAAmB,CAACU,QAAQ,CAACJ,IAAI,CAAC,GAAGA,IAAI,GAAG,SAAS,CAAC;IACjGK,OAAO,CAACC,GAAG,CAACf,WAAW,CAACgB,IAAI,CAAC;EAC/B;EAEQR,qBAAqBA,CAAA;IAC3BT,QAAQ,CAAC,IAAI,CAACI,mBAAmB,CAACc,GAAG,CAACR,IAAI,IAAG;MAC3C,OAAO,IAAI,CAACL,iBAAiB,CAACc,GAAG,CAACT,IAAI,CAACU,WAAW,EAAE,CAAC;IACvD,CAAC,CAAC,CAAC,CAACC,SAAS,CACXC,SAAS,IAAG;MACV,IAAI,CAAClB,mBAAmB,CAACmB,OAAO,CAAC,CAACb,IAAI,EAAEc,KAAK,KAAI;QAC/C,IAAI,CAAClB,eAAe,CAACmB,IAAI,CAAC;UACxBC,KAAK,EAAEhB,IAAI;UACXiB,KAAK,EAAEL,SAAS,CAACE,KAAK;SACvB,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CACF;EACH;CACD;AA5BYtB,YAAY,GAAA0B,UAAA,EARxBlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAEnC,YAAY,EAAEC,OAAO,EAAEC,eAAe,CAAE;EACnDkC,WAAW,EAAE,sBAAsB;EACnCC,QAAQ,EAAE;CACX,CAAC,C,EAEW/B,YAAY,CA4BxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}