{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, DestroyRef, inject } from '@angular/core';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatOption } from '@angular/material/autocomplete';\nimport { MatRipple } from '@angular/material/core';\nimport { MatSelect } from '@angular/material/select';\nimport { MembersCardComponent } from '../members/members-card/members-card.component';\nimport { MembersTableComponent } from '../members/members-table/members-table.component';\nimport { PaginationComponent } from '../../core/components/pagination/pagination.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\nimport { DatePipe, NgOptimizedImage, TitleCasePipe } from '@angular/common';\nimport { NotificationsService } from '../../core/services/notifications.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { Router } from '@angular/router';\nlet NotificationsComponent = class NotificationsComponent {\n  constructor() {\n    this.params = {\n      limit: 15,\n      page: 1,\n      total: 0\n    };\n    this._destroyRef = inject(DestroyRef);\n    this._router = inject(Router);\n    this._notificationsService = inject(NotificationsService);\n    this.notifications = [];\n  }\n  ngOnInit() {\n    this.getNotificationsList();\n  }\n  changePage(page) {\n    this.params.page = page;\n    this.getNotificationsList();\n  }\n  onLimitChange() {\n    this.params.page = 1;\n    this.getNotificationsList();\n  }\n  getNotificationsList() {\n    this._notificationsService.getNotificationsList(this.params).pipe(takeUntilDestroyed(this._destroyRef)).subscribe(res => {\n      this.params.total = res?.total || 0;\n      this.notifications = res.data;\n    });\n  }\n  openNotification(not) {\n    if (not?.details?.objective_id) {\n      this._router.navigate(['/', 'my-tasks', 'objectives'], {\n        queryParams: {\n          objectiveId: not?.details?.objective_id\n        }\n      });\n    }\n    if (not?.details?.key_id) {\n      this._router.navigate(['/', 'my-tasks', 'key-results'], {\n        queryParams: {\n          keyId: not?.details?.key_id\n        }\n      });\n    }\n  }\n};\nNotificationsComponent = __decorate([Component({\n  selector: 'app-notifications',\n  standalone: true,\n  imports: [MatIcon, MatOption, MatRipple, MatSelect, MembersCardComponent, MembersTableComponent, PaginationComponent, TranslateModule, FormsModule, NgOptimizedImage, TitleCasePipe, DatePipe],\n  templateUrl: './notifications.component.html',\n  styleUrl: './notifications.component.scss'\n})], NotificationsComponent);\nexport { NotificationsComponent };","map":{"version":3,"names":["Component","DestroyRef","inject","MatIcon","MatOption","MatRipple","MatSelect","MembersCardComponent","MembersTableComponent","PaginationComponent","TranslateModule","FormsModule","DatePipe","NgOptimizedImage","TitleCasePipe","NotificationsService","takeUntilDestroyed","Router","NotificationsComponent","constructor","params","limit","page","total","_destroyRef","_router","_notificationsService","notifications","ngOnInit","getNotificationsList","changePage","onLimitChange","pipe","subscribe","res","data","openNotification","not","details","objective_id","navigate","queryParams","objectiveId","key_id","keyId","__decorate","selector","standalone","imports","templateUrl","styleUrl"],"sources":["/Users/sultonbayevogabek/Projects/do-stmurod-vagonlar/src/app/cabinet/notifications/notifications.component.ts"],"sourcesContent":["import { Component, DestroyRef, inject, OnInit } from '@angular/core';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatOption } from '@angular/material/autocomplete';\nimport { MatRipple } from '@angular/material/core';\nimport { MatSelect } from '@angular/material/select';\nimport { MembersCardComponent } from '../members/members-card/members-card.component';\nimport { MembersTableComponent } from '../members/members-table/members-table.component';\nimport { PaginationComponent } from '../../core/components/pagination/pagination.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\nimport { DatePipe, NgOptimizedImage, TitleCasePipe } from '@angular/common';\nimport { NotificationsService } from '../../core/services/notifications.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { NotificationModel } from '../../core/models/notification.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-notifications',\n  standalone: true,\n  imports: [\n    MatIcon,\n    MatOption,\n    MatRipple,\n    MatSelect,\n    MembersCardComponent,\n    MembersTableComponent,\n    PaginationComponent,\n    TranslateModule,\n    FormsModule,\n    NgOptimizedImage,\n    TitleCasePipe,\n    DatePipe\n  ],\n  templateUrl: './notifications.component.html',\n  styleUrl: './notifications.component.scss'\n})\n\nexport class NotificationsComponent implements OnInit {\n  params = {\n    limit: 15,\n    page: 1,\n    total: 0\n  };\n\n  private _destroyRef = inject(DestroyRef);\n  private _router = inject(Router);\n  private _notificationsService = inject(NotificationsService);\n\n  notifications: NotificationModel[] = [];\n\n  ngOnInit() {\n    this.getNotificationsList();\n  }\n\n  changePage(page: number): void {\n    this.params.page = page;\n    this.getNotificationsList();\n  }\n\n  onLimitChange(): void {\n    this.params.page = 1;\n    this.getNotificationsList();\n  }\n\n  getNotificationsList(): void {\n    this._notificationsService.getNotificationsList(this.params)\n      .pipe(takeUntilDestroyed(this._destroyRef))\n      .subscribe(res => {\n        this.params.total = res?.total || 0;\n        this.notifications = res.data;\n      });\n  }\n\n  openNotification(not: NotificationModel): void {\n    if (not?.details?.objective_id) {\n      this._router.navigate(['/', 'my-tasks', 'objectives'], {\n        queryParams: {\n          objectiveId: not?.details?.objective_id\n        }\n      });\n    }\n\n    if (not?.details?.key_id) {\n      this._router.navigate(['/', 'my-tasks', 'key-results'], {\n        queryParams: {\n          keyId: not?.details?.key_id\n        }\n      });\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}